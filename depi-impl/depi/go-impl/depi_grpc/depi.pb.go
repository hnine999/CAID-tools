// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: depi.proto

package depi_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangeType int32

const (
	ChangeType_Added    ChangeType = 0
	ChangeType_Modified ChangeType = 1
	ChangeType_Renamed  ChangeType = 2
	ChangeType_Removed  ChangeType = 3
)

// Enum value maps for ChangeType.
var (
	ChangeType_name = map[int32]string{
		0: "Added",
		1: "Modified",
		2: "Renamed",
		3: "Removed",
	}
	ChangeType_value = map[string]int32{
		"Added":    0,
		"Modified": 1,
		"Renamed":  2,
		"Removed":  3,
	}
)

func (x ChangeType) Enum() *ChangeType {
	p := new(ChangeType)
	*p = x
	return p
}

func (x ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_depi_proto_enumTypes[0].Descriptor()
}

func (ChangeType) Type() protoreflect.EnumType {
	return &file_depi_proto_enumTypes[0]
}

func (x ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeType.Descriptor instead.
func (ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{0}
}

type UpdateType int32

const (
	UpdateType_AddResource                 UpdateType = 0
	UpdateType_RemoveResource              UpdateType = 1
	UpdateType_AddLink                     UpdateType = 2
	UpdateType_RemoveLink                  UpdateType = 3
	UpdateType_RenameResource              UpdateType = 4
	UpdateType_ResourceGroupVersionChanged UpdateType = 5
	UpdateType_RenameLink                  UpdateType = 6
	UpdateType_MarkLinkClean               UpdateType = 7
	UpdateType_MarkLinkDirty               UpdateType = 8
	UpdateType_ChangeResource              UpdateType = 9
	UpdateType_MarkInferredLinkClean       UpdateType = 10
	UpdateType_RemoveResourceGroup         UpdateType = 11
	UpdateType_EditResourceGroup           UpdateType = 12
	UpdateType_AddResourceGroup            UpdateType = 13
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0:  "AddResource",
		1:  "RemoveResource",
		2:  "AddLink",
		3:  "RemoveLink",
		4:  "RenameResource",
		5:  "ResourceGroupVersionChanged",
		6:  "RenameLink",
		7:  "MarkLinkClean",
		8:  "MarkLinkDirty",
		9:  "ChangeResource",
		10: "MarkInferredLinkClean",
		11: "RemoveResourceGroup",
		12: "EditResourceGroup",
		13: "AddResourceGroup",
	}
	UpdateType_value = map[string]int32{
		"AddResource":                 0,
		"RemoveResource":              1,
		"AddLink":                     2,
		"RemoveLink":                  3,
		"RenameResource":              4,
		"ResourceGroupVersionChanged": 5,
		"RenameLink":                  6,
		"MarkLinkClean":               7,
		"MarkLinkDirty":               8,
		"ChangeResource":              9,
		"MarkInferredLinkClean":       10,
		"RemoveResourceGroup":         11,
		"EditResourceGroup":           12,
		"AddResourceGroup":            13,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_depi_proto_enumTypes[1].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_depi_proto_enumTypes[1]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{1}
}

type DependenciesType int32

const (
	DependenciesType_Dependencies DependenciesType = 0
	DependenciesType_Dependants   DependenciesType = 1
)

// Enum value maps for DependenciesType.
var (
	DependenciesType_name = map[int32]string{
		0: "Dependencies",
		1: "Dependants",
	}
	DependenciesType_value = map[string]int32{
		"Dependencies": 0,
		"Dependants":   1,
	}
)

func (x DependenciesType) Enum() *DependenciesType {
	p := new(DependenciesType)
	*p = x
	return p
}

func (x DependenciesType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DependenciesType) Descriptor() protoreflect.EnumDescriptor {
	return file_depi_proto_enumTypes[2].Descriptor()
}

func (DependenciesType) Type() protoreflect.EnumType {
	return &file_depi_proto_enumTypes[2]
}

func (x DependenciesType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DependenciesType.Descriptor instead.
func (DependenciesType) EnumDescriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{2}
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId               string `protobuf:"bytes,1,opt,name=toolId,proto3" json:"toolId,omitempty"`
	ResourceGroupName    string `protobuf:"bytes,2,opt,name=resourceGroupName,proto3" json:"resourceGroupName,omitempty"`
	ResourceGroupURL     string `protobuf:"bytes,3,opt,name=resourceGroupURL,proto3" json:"resourceGroupURL,omitempty"`
	ResourceGroupVersion string `protobuf:"bytes,4,opt,name=resourceGroupVersion,proto3" json:"resourceGroupVersion,omitempty"`
	Name                 string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	URL                  string `protobuf:"bytes,6,opt,name=URL,proto3" json:"URL,omitempty"`
	Id                   string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Deleted              bool   `protobuf:"varint,8,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *Resource) GetResourceGroupName() string {
	if x != nil {
		return x.ResourceGroupName
	}
	return ""
}

func (x *Resource) GetResourceGroupURL() string {
	if x != nil {
		return x.ResourceGroupURL
	}
	return ""
}

func (x *Resource) GetResourceGroupVersion() string {
	if x != nil {
		return x.ResourceGroupVersion
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type ResourceChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	URL        string     `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	ChangeType ChangeType `protobuf:"varint,3,opt,name=changeType,proto3,enum=ChangeType" json:"changeType,omitempty"`
	Id         string     `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	NewName    string     `protobuf:"bytes,5,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	New_URL    string     `protobuf:"bytes,6,opt,name=new_URL,json=newURL,proto3" json:"new_URL,omitempty"`
	NewId      string     `protobuf:"bytes,7,opt,name=new_id,json=newId,proto3" json:"new_id,omitempty"`
}

func (x *ResourceChange) Reset() {
	*x = ResourceChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceChange) ProtoMessage() {}

func (x *ResourceChange) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceChange.ProtoReflect.Descriptor instead.
func (*ResourceChange) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceChange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceChange) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ResourceChange) GetChangeType() ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return ChangeType_Added
}

func (x *ResourceChange) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceChange) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *ResourceChange) GetNew_URL() string {
	if x != nil {
		return x.New_URL
	}
	return ""
}

func (x *ResourceChange) GetNewId() string {
	if x != nil {
		return x.NewId
	}
	return ""
}

type ResourceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ToolId    string      `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL       string      `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	Version   string      `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Resources []*Resource `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ResourceGroup) Reset() {
	*x = ResourceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroup) ProtoMessage() {}

func (x *ResourceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroup.ProtoReflect.Descriptor instead.
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceGroup) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceGroup) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ResourceGroup) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourceGroup) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceGroupChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ToolId    string            `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL       string            `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	Version   string            `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Resources []*ResourceChange `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ResourceGroupChange) Reset() {
	*x = ResourceGroupChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroupChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupChange) ProtoMessage() {}

func (x *ResourceGroupChange) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupChange.ProtoReflect.Descriptor instead.
func (*ResourceGroupChange) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceGroupChange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceGroupChange) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceGroupChange) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ResourceGroupChange) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourceGroupChange) GetResources() []*ResourceChange {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceGroupVersionChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ToolId     string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL        string `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	Version    string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	NewVersion string `protobuf:"bytes,5,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
}

func (x *ResourceGroupVersionChange) Reset() {
	*x = ResourceGroupVersionChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroupVersionChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupVersionChange) ProtoMessage() {}

func (x *ResourceGroupVersionChange) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupVersionChange.ProtoReflect.Descriptor instead.
func (*ResourceGroupVersionChange) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceGroupVersionChange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceGroupVersionChange) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceGroupVersionChange) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ResourceGroupVersionChange) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourceGroupVersionChange) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

type ResourceGroupEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId     string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL        string `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	NewName    string `protobuf:"bytes,5,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	NewToolId  string `protobuf:"bytes,6,opt,name=new_toolId,json=newToolId,proto3" json:"new_toolId,omitempty"`
	New_URL    string `protobuf:"bytes,7,opt,name=new_URL,json=newURL,proto3" json:"new_URL,omitempty"`
	NewVersion string `protobuf:"bytes,8,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
}

func (x *ResourceGroupEdit) Reset() {
	*x = ResourceGroupEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroupEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupEdit) ProtoMessage() {}

func (x *ResourceGroupEdit) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupEdit.ProtoReflect.Descriptor instead.
func (*ResourceGroupEdit) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceGroupEdit) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceGroupEdit) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ResourceGroupEdit) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *ResourceGroupEdit) GetNewToolId() string {
	if x != nil {
		return x.NewToolId
	}
	return ""
}

func (x *ResourceGroupEdit) GetNew_URL() string {
	if x != nil {
		return x.New_URL
	}
	return ""
}

func (x *ResourceGroupEdit) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

type ResourceGroupRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId string `protobuf:"bytes,1,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL    string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *ResourceGroupRef) Reset() {
	*x = ResourceGroupRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroupRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupRef) ProtoMessage() {}

func (x *ResourceGroupRef) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupRef.ProtoReflect.Descriptor instead.
func (*ResourceGroupRef) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceGroupRef) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceGroupRef) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type ResourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId           string `protobuf:"bytes,1,opt,name=toolId,proto3" json:"toolId,omitempty"`
	ResourceGroupURL string `protobuf:"bytes,3,opt,name=resourceGroupURL,proto3" json:"resourceGroupURL,omitempty"`
	URL              string `protobuf:"bytes,6,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceRef) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceRef) GetResourceGroupURL() string {
	if x != nil {
		return x.ResourceGroupURL
	}
	return ""
}

func (x *ResourceRef) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type ResourceLinkRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromRes    *Resource `protobuf:"bytes,1,opt,name=fromRes,proto3" json:"fromRes,omitempty"`
	FromResNew *Resource `protobuf:"bytes,2,opt,name=fromResNew,proto3" json:"fromResNew,omitempty"`
	ToRes      *Resource `protobuf:"bytes,3,opt,name=toRes,proto3" json:"toRes,omitempty"`
	ToResNew   *Resource `protobuf:"bytes,4,opt,name=toResNew,proto3" json:"toResNew,omitempty"`
}

func (x *ResourceLinkRename) Reset() {
	*x = ResourceLinkRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLinkRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLinkRename) ProtoMessage() {}

func (x *ResourceLinkRename) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLinkRename.ProtoReflect.Descriptor instead.
func (*ResourceLinkRename) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceLinkRename) GetFromRes() *Resource {
	if x != nil {
		return x.FromRes
	}
	return nil
}

func (x *ResourceLinkRename) GetFromResNew() *Resource {
	if x != nil {
		return x.FromResNew
	}
	return nil
}

func (x *ResourceLinkRename) GetToRes() *Resource {
	if x != nil {
		return x.ToRes
	}
	return nil
}

func (x *ResourceLinkRename) GetToResNew() *Resource {
	if x != nil {
		return x.ToResNew
	}
	return nil
}

type ResourceRefPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolId           string `protobuf:"bytes,1,opt,name=toolId,proto3" json:"toolId,omitempty"`
	ResourceGroupURL string `protobuf:"bytes,3,opt,name=resourceGroupURL,proto3" json:"resourceGroupURL,omitempty"`
	URLPattern       string `protobuf:"bytes,4,opt,name=URLPattern,proto3" json:"URLPattern,omitempty"`
}

func (x *ResourceRefPattern) Reset() {
	*x = ResourceRefPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRefPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRefPattern) ProtoMessage() {}

func (x *ResourceRefPattern) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRefPattern.ProtoReflect.Descriptor instead.
func (*ResourceRefPattern) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceRefPattern) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ResourceRefPattern) GetResourceGroupURL() string {
	if x != nil {
		return x.ResourceGroupURL
	}
	return ""
}

func (x *ResourceRefPattern) GetURLPattern() string {
	if x != nil {
		return x.URLPattern
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Project  string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	ToolId   string `protobuf:"bytes,4,opt,name=toolId,proto3" json:"toolId,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{10}
}

func (x *LoginRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *LoginRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	SessionId  string `protobuf:"bytes,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	LoginToken string `protobuf:"bytes,4,opt,name=loginToken,proto3" json:"loginToken,omitempty"`
	User       string `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{11}
}

func (x *LoginResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LoginResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LoginResponse) GetLoginToken() string {
	if x != nil {
		return x.LoginToken
	}
	return ""
}

func (x *LoginResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type LoginWithTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginToken string `protobuf:"bytes,1,opt,name=loginToken,proto3" json:"loginToken,omitempty"`
}

func (x *LoginWithTokenRequest) Reset() {
	*x = LoginWithTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithTokenRequest) ProtoMessage() {}

func (x *LoginWithTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithTokenRequest.ProtoReflect.Descriptor instead.
func (*LoginWithTokenRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{12}
}

func (x *LoginWithTokenRequest) GetLoginToken() string {
	if x != nil {
		return x.LoginToken
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{13}
}

func (x *PingRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	LoginToken string `protobuf:"bytes,3,opt,name=loginToken,proto3" json:"loginToken,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{14}
}

func (x *PingResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PingResponse) GetLoginToken() string {
	if x != nil {
		return x.LoginToken
	}
	return ""
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{15}
}

func (x *LogoutRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GenericResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok  bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GenericResponse) Reset() {
	*x = GenericResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericResponse) ProtoMessage() {}

func (x *GenericResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericResponse.ProtoReflect.Descriptor instead.
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{16}
}

func (x *GenericResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GenericResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RegisterCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RegisterCallbackRequest) Reset() {
	*x = RegisterCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCallbackRequest) ProtoMessage() {}

func (x *RegisterCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCallbackRequest.ProtoReflect.Descriptor instead.
func (*RegisterCallbackRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{17}
}

func (x *RegisterCallbackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ResourceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchedResource *ResourceRef `protobuf:"bytes,1,opt,name=watchedResource,proto3" json:"watchedResource,omitempty"`
	UpdatedResource *ResourceRef `protobuf:"bytes,2,opt,name=updatedResource,proto3" json:"updatedResource,omitempty"`
}

func (x *ResourceUpdate) Reset() {
	*x = ResourceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUpdate) ProtoMessage() {}

func (x *ResourceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUpdate.ProtoReflect.Descriptor instead.
func (*ResourceUpdate) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{18}
}

func (x *ResourceUpdate) GetWatchedResource() *ResourceRef {
	if x != nil {
		return x.WatchedResource
	}
	return nil
}

func (x *ResourceUpdate) GetUpdatedResource() *ResourceRef {
	if x != nil {
		return x.UpdatedResource
	}
	return nil
}

type ResourcesUpdatedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool              `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Updates []*ResourceUpdate `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *ResourcesUpdatedNotification) Reset() {
	*x = ResourcesUpdatedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesUpdatedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesUpdatedNotification) ProtoMessage() {}

func (x *ResourcesUpdatedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesUpdatedNotification.ProtoReflect.Descriptor instead.
func (*ResourcesUpdatedNotification) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{19}
}

func (x *ResourcesUpdatedNotification) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ResourcesUpdatedNotification) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResourcesUpdatedNotification) GetUpdates() []*ResourceUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type WatchResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ToolId    string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL       string `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *WatchResourceGroupRequest) Reset() {
	*x = WatchResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResourceGroupRequest) ProtoMessage() {}

func (x *WatchResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*WatchResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{20}
}

func (x *WatchResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *WatchResourceGroupRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *WatchResourceGroupRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type UnwatchResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ToolId    string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	URL       string `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *UnwatchResourceGroupRequest) Reset() {
	*x = UnwatchResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnwatchResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwatchResourceGroupRequest) ProtoMessage() {}

func (x *UnwatchResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwatchResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*UnwatchResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{21}
}

func (x *UnwatchResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UnwatchResourceGroupRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *UnwatchResourceGroupRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type GetLastKnownVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ToolId    string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	URL       string `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *GetLastKnownVersionRequest) Reset() {
	*x = GetLastKnownVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastKnownVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastKnownVersionRequest) ProtoMessage() {}

func (x *GetLastKnownVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastKnownVersionRequest.ProtoReflect.Descriptor instead.
func (*GetLastKnownVersionRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{22}
}

func (x *GetLastKnownVersionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetLastKnownVersionRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *GetLastKnownVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLastKnownVersionRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type GetLastKnownVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetLastKnownVersionResponse) Reset() {
	*x = GetLastKnownVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastKnownVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastKnownVersionResponse) ProtoMessage() {}

func (x *GetLastKnownVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastKnownVersionResponse.ProtoReflect.Descriptor instead.
func (*GetLastKnownVersionResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{23}
}

func (x *GetLastKnownVersionResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetLastKnownVersionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLastKnownVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type UpdateResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string               `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceGroup *ResourceGroupChange `protobuf:"bytes,2,opt,name=resourceGroup,proto3" json:"resourceGroup,omitempty"`
	UpdateBranch  string               `protobuf:"bytes,3,opt,name=updateBranch,proto3" json:"updateBranch,omitempty"`
}

func (x *UpdateResourceGroupRequest) Reset() {
	*x = UpdateResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceGroupRequest) ProtoMessage() {}

func (x *UpdateResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateResourceGroupRequest) GetResourceGroup() *ResourceGroupChange {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

func (x *UpdateResourceGroupRequest) GetUpdateBranch() string {
	if x != nil {
		return x.UpdateBranch
	}
	return ""
}

type AddResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string         `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceGroup *ResourceGroup `protobuf:"bytes,2,opt,name=resourceGroup,proto3" json:"resourceGroup,omitempty"`
}

func (x *AddResourceGroupRequest) Reset() {
	*x = AddResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourceGroupRequest) ProtoMessage() {}

func (x *AddResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*AddResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{25}
}

func (x *AddResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AddResourceGroupRequest) GetResourceGroup() *ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

type EditResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string             `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceGroup *ResourceGroupEdit `protobuf:"bytes,2,opt,name=resourceGroup,proto3" json:"resourceGroup,omitempty"`
}

func (x *EditResourceGroupRequest) Reset() {
	*x = EditResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResourceGroupRequest) ProtoMessage() {}

func (x *EditResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*EditResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{26}
}

func (x *EditResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EditResourceGroupRequest) GetResourceGroup() *ResourceGroupEdit {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

type RemoveResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string            `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceGroup *ResourceGroupRef `protobuf:"bytes,2,opt,name=resourceGroup,proto3" json:"resourceGroup,omitempty"`
}

func (x *RemoveResourceGroupRequest) Reset() {
	*x = RemoveResourceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourceGroupRequest) ProtoMessage() {}

func (x *RemoveResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveResourceGroupRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RemoveResourceGroupRequest) GetResourceGroup() *ResourceGroupRef {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

type AddResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId        string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ToolId           string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	ResourceGroupURL string `protobuf:"bytes,3,opt,name=resourceGroupURL,proto3" json:"resourceGroupURL,omitempty"`
	URL              string `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	Name             string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Id               string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddResourceRequest) Reset() {
	*x = AddResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourceRequest) ProtoMessage() {}

func (x *AddResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourceRequest.ProtoReflect.Descriptor instead.
func (*AddResourceRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{28}
}

func (x *AddResourceRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AddResourceRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *AddResourceRequest) GetResourceGroupURL() string {
	if x != nil {
		return x.ResourceGroupURL
	}
	return ""
}

func (x *AddResourceRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *AddResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddResourcesToBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string      `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *AddResourcesToBlackboardRequest) Reset() {
	*x = AddResourcesToBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourcesToBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourcesToBlackboardRequest) ProtoMessage() {}

func (x *AddResourcesToBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourcesToBlackboardRequest.ProtoReflect.Descriptor instead.
func (*AddResourcesToBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{29}
}

func (x *AddResourcesToBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AddResourcesToBlackboardRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type RemoveResourcesFromBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string         `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceRefs []*ResourceRef `protobuf:"bytes,2,rep,name=resourceRefs,proto3" json:"resourceRefs,omitempty"`
}

func (x *RemoveResourcesFromBlackboardRequest) Reset() {
	*x = RemoveResourcesFromBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourcesFromBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourcesFromBlackboardRequest) ProtoMessage() {}

func (x *RemoveResourcesFromBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourcesFromBlackboardRequest.ProtoReflect.Descriptor instead.
func (*RemoveResourcesFromBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveResourcesFromBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RemoveResourcesFromBlackboardRequest) GetResourceRefs() []*ResourceRef {
	if x != nil {
		return x.ResourceRefs
	}
	return nil
}

type GetBlackboardResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *GetBlackboardResourcesRequest) Reset() {
	*x = GetBlackboardResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackboardResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackboardResourcesRequest) ProtoMessage() {}

func (x *GetBlackboardResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackboardResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetBlackboardResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{31}
}

func (x *GetBlackboardResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetBlackboardResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resources []*Resource     `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	Links     []*ResourceLink `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GetBlackboardResourcesResponse) Reset() {
	*x = GetBlackboardResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackboardResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackboardResourcesResponse) ProtoMessage() {}

func (x *GetBlackboardResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackboardResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetBlackboardResourcesResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{32}
}

func (x *GetBlackboardResourcesResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetBlackboardResourcesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBlackboardResourcesResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GetBlackboardResourcesResponse) GetLinks() []*ResourceLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type ResourceLinkRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromRes *ResourceRef `protobuf:"bytes,1,opt,name=fromRes,proto3" json:"fromRes,omitempty"`
	ToRes   *ResourceRef `protobuf:"bytes,2,opt,name=toRes,proto3" json:"toRes,omitempty"`
}

func (x *ResourceLinkRef) Reset() {
	*x = ResourceLinkRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLinkRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLinkRef) ProtoMessage() {}

func (x *ResourceLinkRef) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLinkRef.ProtoReflect.Descriptor instead.
func (*ResourceLinkRef) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{33}
}

func (x *ResourceLinkRef) GetFromRes() *ResourceRef {
	if x != nil {
		return x.FromRes
	}
	return nil
}

func (x *ResourceLinkRef) GetToRes() *ResourceRef {
	if x != nil {
		return x.ToRes
	}
	return nil
}

type InferredDirtiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource         *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	LastCleanVersion string    `protobuf:"bytes,2,opt,name=lastCleanVersion,proto3" json:"lastCleanVersion,omitempty"`
}

func (x *InferredDirtiness) Reset() {
	*x = InferredDirtiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferredDirtiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferredDirtiness) ProtoMessage() {}

func (x *InferredDirtiness) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferredDirtiness.ProtoReflect.Descriptor instead.
func (*InferredDirtiness) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{34}
}

func (x *InferredDirtiness) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *InferredDirtiness) GetLastCleanVersion() string {
	if x != nil {
		return x.LastCleanVersion
	}
	return ""
}

type ResourceLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromRes           *Resource            `protobuf:"bytes,1,opt,name=fromRes,proto3" json:"fromRes,omitempty"`
	ToRes             *Resource            `protobuf:"bytes,2,opt,name=toRes,proto3" json:"toRes,omitempty"`
	Deleted           bool                 `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Dirty             bool                 `protobuf:"varint,4,opt,name=dirty,proto3" json:"dirty,omitempty"`
	LastCleanVersion  string               `protobuf:"bytes,5,opt,name=lastCleanVersion,proto3" json:"lastCleanVersion,omitempty"`
	InferredDirtiness []*InferredDirtiness `protobuf:"bytes,6,rep,name=inferredDirtiness,proto3" json:"inferredDirtiness,omitempty"`
}

func (x *ResourceLink) Reset() {
	*x = ResourceLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLink) ProtoMessage() {}

func (x *ResourceLink) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLink.ProtoReflect.Descriptor instead.
func (*ResourceLink) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{35}
}

func (x *ResourceLink) GetFromRes() *Resource {
	if x != nil {
		return x.FromRes
	}
	return nil
}

func (x *ResourceLink) GetToRes() *Resource {
	if x != nil {
		return x.ToRes
	}
	return nil
}

func (x *ResourceLink) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *ResourceLink) GetDirty() bool {
	if x != nil {
		return x.Dirty
	}
	return false
}

func (x *ResourceLink) GetLastCleanVersion() string {
	if x != nil {
		return x.LastCleanVersion
	}
	return ""
}

func (x *ResourceLink) GetInferredDirtiness() []*InferredDirtiness {
	if x != nil {
		return x.InferredDirtiness
	}
	return nil
}

type ResourceLinkPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromRes *ResourceRefPattern `protobuf:"bytes,1,opt,name=fromRes,proto3" json:"fromRes,omitempty"`
	ToRes   *ResourceRefPattern `protobuf:"bytes,2,opt,name=toRes,proto3" json:"toRes,omitempty"`
}

func (x *ResourceLinkPattern) Reset() {
	*x = ResourceLinkPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLinkPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLinkPattern) ProtoMessage() {}

func (x *ResourceLinkPattern) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLinkPattern.ProtoReflect.Descriptor instead.
func (*ResourceLinkPattern) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{36}
}

func (x *ResourceLinkPattern) GetFromRes() *ResourceRefPattern {
	if x != nil {
		return x.FromRes
	}
	return nil
}

func (x *ResourceLinkPattern) GetToRes() *ResourceRefPattern {
	if x != nil {
		return x.ToRes
	}
	return nil
}

type LinkBlackboardResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string             `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Links     []*ResourceLinkRef `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *LinkBlackboardResourcesRequest) Reset() {
	*x = LinkBlackboardResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkBlackboardResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkBlackboardResourcesRequest) ProtoMessage() {}

func (x *LinkBlackboardResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkBlackboardResourcesRequest.ProtoReflect.Descriptor instead.
func (*LinkBlackboardResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{37}
}

func (x *LinkBlackboardResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LinkBlackboardResourcesRequest) GetLinks() []*ResourceLinkRef {
	if x != nil {
		return x.Links
	}
	return nil
}

type UnlinkBlackboardResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string             `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Links     []*ResourceLinkRef `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *UnlinkBlackboardResourcesRequest) Reset() {
	*x = UnlinkBlackboardResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkBlackboardResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkBlackboardResourcesRequest) ProtoMessage() {}

func (x *UnlinkBlackboardResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkBlackboardResourcesRequest.ProtoReflect.Descriptor instead.
func (*UnlinkBlackboardResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{38}
}

func (x *UnlinkBlackboardResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UnlinkBlackboardResourcesRequest) GetLinks() []*ResourceLinkRef {
	if x != nil {
		return x.Links
	}
	return nil
}

type LinkResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string           `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Link      *ResourceLinkRef `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *LinkResourcesRequest) Reset() {
	*x = LinkResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResourcesRequest) ProtoMessage() {}

func (x *LinkResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResourcesRequest.ProtoReflect.Descriptor instead.
func (*LinkResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{39}
}

func (x *LinkResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LinkResourcesRequest) GetLink() *ResourceLinkRef {
	if x != nil {
		return x.Link
	}
	return nil
}

type UnlinkResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string           `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Link      *ResourceLinkRef `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *UnlinkResourcesRequest) Reset() {
	*x = UnlinkResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkResourcesRequest) ProtoMessage() {}

func (x *UnlinkResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkResourcesRequest.ProtoReflect.Descriptor instead.
func (*UnlinkResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{40}
}

func (x *UnlinkResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UnlinkResourcesRequest) GetLink() *ResourceLinkRef {
	if x != nil {
		return x.Link
	}
	return nil
}

type GetBidirectionalChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool        `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg      string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resource []*Resource `protobuf:"bytes,3,rep,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetBidirectionalChangesResponse) Reset() {
	*x = GetBidirectionalChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBidirectionalChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBidirectionalChangesResponse) ProtoMessage() {}

func (x *GetBidirectionalChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBidirectionalChangesResponse.ProtoReflect.Descriptor instead.
func (*GetBidirectionalChangesResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{41}
}

func (x *GetBidirectionalChangesResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetBidirectionalChangesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBidirectionalChangesResponse) GetResource() []*Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type SetBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Branch    string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *SetBranchRequest) Reset() {
	*x = SetBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBranchRequest) ProtoMessage() {}

func (x *SetBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBranchRequest.ProtoReflect.Descriptor instead.
func (*SetBranchRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{42}
}

func (x *SetBranchRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SetBranchRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type CurrentBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *CurrentBranchRequest) Reset() {
	*x = CurrentBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentBranchRequest) ProtoMessage() {}

func (x *CurrentBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentBranchRequest.ProtoReflect.Descriptor instead.
func (*CurrentBranchRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{43}
}

func (x *CurrentBranchRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CurrentBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Branch string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *CurrentBranchResponse) Reset() {
	*x = CurrentBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentBranchResponse) ProtoMessage() {}

func (x *CurrentBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentBranchResponse.ProtoReflect.Descriptor instead.
func (*CurrentBranchResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{44}
}

func (x *CurrentBranchResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CurrentBranchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CurrentBranchResponse) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type SaveBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *SaveBlackboardRequest) Reset() {
	*x = SaveBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBlackboardRequest) ProtoMessage() {}

func (x *SaveBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBlackboardRequest.ProtoReflect.Descriptor instead.
func (*SaveBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{45}
}

func (x *SaveBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ClearBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *ClearBlackboardRequest) Reset() {
	*x = ClearBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearBlackboardRequest) ProtoMessage() {}

func (x *ClearBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearBlackboardRequest.ProtoReflect.Descriptor instead.
func (*ClearBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{46}
}

func (x *ClearBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CreateBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	BranchName string `protobuf:"bytes,2,opt,name=branchName,proto3" json:"branchName,omitempty"`
	// Types that are assignable to SourceName:
	//
	//	*CreateBranchRequest_FromBranch
	//	*CreateBranchRequest_FromTag
	SourceName isCreateBranchRequest_SourceName `protobuf_oneof:"source_name"`
}

func (x *CreateBranchRequest) Reset() {
	*x = CreateBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchRequest) ProtoMessage() {}

func (x *CreateBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchRequest.ProtoReflect.Descriptor instead.
func (*CreateBranchRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{47}
}

func (x *CreateBranchRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateBranchRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (m *CreateBranchRequest) GetSourceName() isCreateBranchRequest_SourceName {
	if m != nil {
		return m.SourceName
	}
	return nil
}

func (x *CreateBranchRequest) GetFromBranch() string {
	if x, ok := x.GetSourceName().(*CreateBranchRequest_FromBranch); ok {
		return x.FromBranch
	}
	return ""
}

func (x *CreateBranchRequest) GetFromTag() string {
	if x, ok := x.GetSourceName().(*CreateBranchRequest_FromTag); ok {
		return x.FromTag
	}
	return ""
}

type isCreateBranchRequest_SourceName interface {
	isCreateBranchRequest_SourceName()
}

type CreateBranchRequest_FromBranch struct {
	FromBranch string `protobuf:"bytes,3,opt,name=fromBranch,proto3,oneof"`
}

type CreateBranchRequest_FromTag struct {
	FromTag string `protobuf:"bytes,4,opt,name=fromTag,proto3,oneof"`
}

func (*CreateBranchRequest_FromBranch) isCreateBranchRequest_SourceName() {}

func (*CreateBranchRequest_FromTag) isCreateBranchRequest_SourceName() {}

type CreateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	TagName    string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
	FromBranch string `protobuf:"bytes,3,opt,name=fromBranch,proto3" json:"fromBranch,omitempty"`
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{48}
}

func (x *CreateTagRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateTagRequest) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *CreateTagRequest) GetFromBranch() string {
	if x != nil {
		return x.FromBranch
	}
	return ""
}

type MarkResourcesCleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId            string         `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ResourceRefs         []*ResourceRef `protobuf:"bytes,2,rep,name=resourceRefs,proto3" json:"resourceRefs,omitempty"`
	PropagateCleanliness bool           `protobuf:"varint,3,opt,name=propagateCleanliness,proto3" json:"propagateCleanliness,omitempty"`
}

func (x *MarkResourcesCleanRequest) Reset() {
	*x = MarkResourcesCleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkResourcesCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkResourcesCleanRequest) ProtoMessage() {}

func (x *MarkResourcesCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkResourcesCleanRequest.ProtoReflect.Descriptor instead.
func (*MarkResourcesCleanRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{49}
}

func (x *MarkResourcesCleanRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MarkResourcesCleanRequest) GetResourceRefs() []*ResourceRef {
	if x != nil {
		return x.ResourceRefs
	}
	return nil
}

func (x *MarkResourcesCleanRequest) GetPropagateCleanliness() bool {
	if x != nil {
		return x.PropagateCleanliness
	}
	return false
}

type MarkLinksCleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId            string             `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Links                []*ResourceLinkRef `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	PropagateCleanliness bool               `protobuf:"varint,3,opt,name=propagateCleanliness,proto3" json:"propagateCleanliness,omitempty"`
}

func (x *MarkLinksCleanRequest) Reset() {
	*x = MarkLinksCleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkLinksCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkLinksCleanRequest) ProtoMessage() {}

func (x *MarkLinksCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkLinksCleanRequest.ProtoReflect.Descriptor instead.
func (*MarkLinksCleanRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{50}
}

func (x *MarkLinksCleanRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MarkLinksCleanRequest) GetLinks() []*ResourceLinkRef {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *MarkLinksCleanRequest) GetPropagateCleanliness() bool {
	if x != nil {
		return x.PropagateCleanliness
	}
	return false
}

type MarkInferredDirtinessCleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId            string           `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Link                 *ResourceLinkRef `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	DirtinessSource      *ResourceRef     `protobuf:"bytes,3,opt,name=dirtinessSource,proto3" json:"dirtinessSource,omitempty"`
	PropagateCleanliness bool             `protobuf:"varint,4,opt,name=propagateCleanliness,proto3" json:"propagateCleanliness,omitempty"`
}

func (x *MarkInferredDirtinessCleanRequest) Reset() {
	*x = MarkInferredDirtinessCleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkInferredDirtinessCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkInferredDirtinessCleanRequest) ProtoMessage() {}

func (x *MarkInferredDirtinessCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkInferredDirtinessCleanRequest.ProtoReflect.Descriptor instead.
func (*MarkInferredDirtinessCleanRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{51}
}

func (x *MarkInferredDirtinessCleanRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MarkInferredDirtinessCleanRequest) GetLink() *ResourceLinkRef {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *MarkInferredDirtinessCleanRequest) GetDirtinessSource() *ResourceRef {
	if x != nil {
		return x.DirtinessSource
	}
	return nil
}

func (x *MarkInferredDirtinessCleanRequest) GetPropagateCleanliness() bool {
	if x != nil {
		return x.PropagateCleanliness
	}
	return false
}

type GetResourceGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *GetResourceGroupsRequest) Reset() {
	*x = GetResourceGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceGroupsRequest) ProtoMessage() {}

func (x *GetResourceGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetResourceGroupsRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{52}
}

func (x *GetResourceGroupsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetResourceGroupsForTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Tag       string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetResourceGroupsForTagRequest) Reset() {
	*x = GetResourceGroupsForTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceGroupsForTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceGroupsForTagRequest) ProtoMessage() {}

func (x *GetResourceGroupsForTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceGroupsForTagRequest.ProtoReflect.Descriptor instead.
func (*GetResourceGroupsForTagRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{53}
}

func (x *GetResourceGroupsForTagRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetResourceGroupsForTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetResourceGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok             bool             `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg            string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ResourceGroups []*ResourceGroup `protobuf:"bytes,3,rep,name=resourceGroups,proto3" json:"resourceGroups,omitempty"`
}

func (x *GetResourceGroupsResponse) Reset() {
	*x = GetResourceGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceGroupsResponse) ProtoMessage() {}

func (x *GetResourceGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetResourceGroupsResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{54}
}

func (x *GetResourceGroupsResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetResourceGroupsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetResourceGroupsResponse) GetResourceGroups() []*ResourceGroup {
	if x != nil {
		return x.ResourceGroups
	}
	return nil
}

type GetResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string                `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Patterns       []*ResourceRefPattern `protobuf:"bytes,2,rep,name=patterns,proto3" json:"patterns,omitempty"`
	IncludeDeleted bool                  `protobuf:"varint,3,opt,name=includeDeleted,proto3" json:"includeDeleted,omitempty"`
}

func (x *GetResourcesRequest) Reset() {
	*x = GetResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesRequest) ProtoMessage() {}

func (x *GetResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{55}
}

func (x *GetResourcesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetResourcesRequest) GetPatterns() []*ResourceRefPattern {
	if x != nil {
		return x.Patterns
	}
	return nil
}

func (x *GetResourcesRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

type GetResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool        `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resources []*Resource `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesResponse) Reset() {
	*x = GetResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesResponse) ProtoMessage() {}

func (x *GetResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{56}
}

func (x *GetResourcesResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetResourcesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetResourcesResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetResourcesAsStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg      string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resource *Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourcesAsStreamResponse) Reset() {
	*x = GetResourcesAsStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesAsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesAsStreamResponse) ProtoMessage() {}

func (x *GetResourcesAsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesAsStreamResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesAsStreamResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{57}
}

func (x *GetResourcesAsStreamResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetResourcesAsStreamResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetResourcesAsStreamResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                 `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Patterns  []*ResourceLinkPattern `protobuf:"bytes,2,rep,name=patterns,proto3" json:"patterns,omitempty"`
}

func (x *GetLinksRequest) Reset() {
	*x = GetLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinksRequest) ProtoMessage() {}

func (x *GetLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinksRequest.ProtoReflect.Descriptor instead.
func (*GetLinksRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{58}
}

func (x *GetLinksRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetLinksRequest) GetPatterns() []*ResourceLinkPattern {
	if x != nil {
		return x.Patterns
	}
	return nil
}

type GetAllLinksAsStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	IncludeDeleted bool   `protobuf:"varint,2,opt,name=includeDeleted,proto3" json:"includeDeleted,omitempty"`
}

func (x *GetAllLinksAsStreamRequest) Reset() {
	*x = GetAllLinksAsStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLinksAsStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLinksAsStreamRequest) ProtoMessage() {}

func (x *GetAllLinksAsStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLinksAsStreamRequest.ProtoReflect.Descriptor instead.
func (*GetAllLinksAsStreamRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{59}
}

func (x *GetAllLinksAsStreamRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetAllLinksAsStreamRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

type GetLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok            bool            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg           string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ResourceLinks []*ResourceLink `protobuf:"bytes,3,rep,name=resourceLinks,proto3" json:"resourceLinks,omitempty"`
}

func (x *GetLinksResponse) Reset() {
	*x = GetLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinksResponse) ProtoMessage() {}

func (x *GetLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinksResponse.ProtoReflect.Descriptor instead.
func (*GetLinksResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{60}
}

func (x *GetLinksResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetLinksResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLinksResponse) GetResourceLinks() []*ResourceLink {
	if x != nil {
		return x.ResourceLinks
	}
	return nil
}

type GetLinksAsStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok           bool          `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg          string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ResourceLink *ResourceLink `protobuf:"bytes,3,opt,name=resourceLink,proto3" json:"resourceLink,omitempty"`
}

func (x *GetLinksAsStreamResponse) Reset() {
	*x = GetLinksAsStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinksAsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinksAsStreamResponse) ProtoMessage() {}

func (x *GetLinksAsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinksAsStreamResponse.ProtoReflect.Descriptor instead.
func (*GetLinksAsStreamResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{61}
}

func (x *GetLinksAsStreamResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetLinksAsStreamResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetLinksAsStreamResponse) GetResourceLink() *ResourceLink {
	if x != nil {
		return x.ResourceLink
	}
	return nil
}

type GetDirtyLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	ToolId       string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	URL          string `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	WithInferred bool   `protobuf:"varint,5,opt,name=withInferred,proto3" json:"withInferred,omitempty"`
}

func (x *GetDirtyLinksRequest) Reset() {
	*x = GetDirtyLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirtyLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirtyLinksRequest) ProtoMessage() {}

func (x *GetDirtyLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirtyLinksRequest.ProtoReflect.Descriptor instead.
func (*GetDirtyLinksRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{62}
}

func (x *GetDirtyLinksRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetDirtyLinksRequest) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *GetDirtyLinksRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDirtyLinksRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *GetDirtyLinksRequest) GetWithInferred() bool {
	if x != nil {
		return x.WithInferred
	}
	return false
}

type GetDirtyLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resources []*Resource     `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	Links     []*ResourceLink `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GetDirtyLinksResponse) Reset() {
	*x = GetDirtyLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirtyLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirtyLinksResponse) ProtoMessage() {}

func (x *GetDirtyLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirtyLinksResponse.ProtoReflect.Descriptor instead.
func (*GetDirtyLinksResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{63}
}

func (x *GetDirtyLinksResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetDirtyLinksResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDirtyLinksResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GetDirtyLinksResponse) GetLinks() []*ResourceLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type GetDirtyLinksAsStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool          `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg      string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resource *Resource     `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Link     *ResourceLink `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *GetDirtyLinksAsStreamResponse) Reset() {
	*x = GetDirtyLinksAsStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDirtyLinksAsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirtyLinksAsStreamResponse) ProtoMessage() {}

func (x *GetDirtyLinksAsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirtyLinksAsStreamResponse.ProtoReflect.Descriptor instead.
func (*GetDirtyLinksAsStreamResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{64}
}

func (x *GetDirtyLinksAsStreamResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetDirtyLinksAsStreamResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDirtyLinksAsStreamResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetDirtyLinksAsStreamResponse) GetLink() *ResourceLink {
	if x != nil {
		return x.Link
	}
	return nil
}

type GetDependencyGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId        string           `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Resource         *ResourceRef     `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	DependenciesType DependenciesType `protobuf:"varint,3,opt,name=dependenciesType,proto3,enum=DependenciesType" json:"dependenciesType,omitempty"`
	MaxDepth         int32            `protobuf:"varint,4,opt,name=maxDepth,proto3" json:"maxDepth,omitempty"`
}

func (x *GetDependencyGraphRequest) Reset() {
	*x = GetDependencyGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDependencyGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDependencyGraphRequest) ProtoMessage() {}

func (x *GetDependencyGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDependencyGraphRequest.ProtoReflect.Descriptor instead.
func (*GetDependencyGraphRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{65}
}

func (x *GetDependencyGraphRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetDependencyGraphRequest) GetResource() *ResourceRef {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetDependencyGraphRequest) GetDependenciesType() DependenciesType {
	if x != nil {
		return x.DependenciesType
	}
	return DependenciesType_Dependencies
}

func (x *GetDependencyGraphRequest) GetMaxDepth() int32 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

type GetDependencyGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg      string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Resource *Resource       `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Links    []*ResourceLink `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GetDependencyGraphResponse) Reset() {
	*x = GetDependencyGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDependencyGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDependencyGraphResponse) ProtoMessage() {}

func (x *GetDependencyGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDependencyGraphResponse.ProtoReflect.Descriptor instead.
func (*GetDependencyGraphResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{66}
}

func (x *GetDependencyGraphResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetDependencyGraphResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDependencyGraphResponse) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetDependencyGraphResponse) GetLinks() []*ResourceLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type GetBranchListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *GetBranchListRequest) Reset() {
	*x = GetBranchListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchListRequest) ProtoMessage() {}

func (x *GetBranchListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchListRequest.ProtoReflect.Descriptor instead.
func (*GetBranchListRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{67}
}

func (x *GetBranchListRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetBranchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Branches []string `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
	Tags     []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetBranchListResponse) Reset() {
	*x = GetBranchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchListResponse) ProtoMessage() {}

func (x *GetBranchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchListResponse.ProtoReflect.Descriptor instead.
func (*GetBranchListResponse) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{68}
}

func (x *GetBranchListResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetBranchListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBranchListResponse) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *GetBranchListResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetBidirectionalChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *GetBidirectionalChangesRequest) Reset() {
	*x = GetBidirectionalChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBidirectionalChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBidirectionalChangesRequest) ProtoMessage() {}

func (x *GetBidirectionalChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBidirectionalChangesRequest.ProtoReflect.Descriptor instead.
func (*GetBidirectionalChangesRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{69}
}

func (x *GetBidirectionalChangesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ApproveBidirectionalChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string         `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Resources []*ResourceRef `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ApproveBidirectionalChangeRequest) Reset() {
	*x = ApproveBidirectionalChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveBidirectionalChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveBidirectionalChangeRequest) ProtoMessage() {}

func (x *ApproveBidirectionalChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveBidirectionalChangeRequest.ProtoReflect.Descriptor instead.
func (*ApproveBidirectionalChangeRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{70}
}

func (x *ApproveBidirectionalChangeRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ApproveBidirectionalChangeRequest) GetResources() []*ResourceRef {
	if x != nil {
		return x.Resources
	}
	return nil
}

type InferredLinkClean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link     *ResourceLinkRef `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Resource *ResourceRef     `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *InferredLinkClean) Reset() {
	*x = InferredLinkClean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferredLinkClean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferredLinkClean) ProtoMessage() {}

func (x *InferredLinkClean) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferredLinkClean.ProtoReflect.Descriptor instead.
func (*InferredLinkClean) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{71}
}

func (x *InferredLinkClean) GetLink() *ResourceLinkRef {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *InferredLinkClean) GetResource() *ResourceRef {
	if x != nil {
		return x.Resource
	}
	return nil
}

type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateType UpdateType `protobuf:"varint,1,opt,name=updateType,proto3,enum=UpdateType" json:"updateType,omitempty"`
	// Types that are assignable to UpdateData:
	//
	//	*Update_Resource
	//	*Update_Link
	//	*Update_Rename
	//	*Update_VersionChange
	//	*Update_RenameLink
	//	*Update_MarkLinkClean
	//	*Update_MarkLinkDirty
	//	*Update_MarkInferredLinkClean
	//	*Update_MarkInferredLinkDirty
	//	*Update_RemoveResourceGroup
	//	*Update_EditResourceGroup
	//	*Update_RemoveLink
	//	*Update_AddResourceGroup
	UpdateData isUpdate_UpdateData `protobuf_oneof:"update_data"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{72}
}

func (x *Update) GetUpdateType() UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return UpdateType_AddResource
}

func (m *Update) GetUpdateData() isUpdate_UpdateData {
	if m != nil {
		return m.UpdateData
	}
	return nil
}

func (x *Update) GetResource() *Resource {
	if x, ok := x.GetUpdateData().(*Update_Resource); ok {
		return x.Resource
	}
	return nil
}

func (x *Update) GetLink() *ResourceLink {
	if x, ok := x.GetUpdateData().(*Update_Link); ok {
		return x.Link
	}
	return nil
}

func (x *Update) GetRename() *ResourceChange {
	if x, ok := x.GetUpdateData().(*Update_Rename); ok {
		return x.Rename
	}
	return nil
}

func (x *Update) GetVersionChange() *ResourceGroupVersionChange {
	if x, ok := x.GetUpdateData().(*Update_VersionChange); ok {
		return x.VersionChange
	}
	return nil
}

func (x *Update) GetRenameLink() *ResourceLinkRename {
	if x, ok := x.GetUpdateData().(*Update_RenameLink); ok {
		return x.RenameLink
	}
	return nil
}

func (x *Update) GetMarkLinkClean() *ResourceLink {
	if x, ok := x.GetUpdateData().(*Update_MarkLinkClean); ok {
		return x.MarkLinkClean
	}
	return nil
}

func (x *Update) GetMarkLinkDirty() *ResourceLinkRef {
	if x, ok := x.GetUpdateData().(*Update_MarkLinkDirty); ok {
		return x.MarkLinkDirty
	}
	return nil
}

func (x *Update) GetMarkInferredLinkClean() *InferredLinkClean {
	if x, ok := x.GetUpdateData().(*Update_MarkInferredLinkClean); ok {
		return x.MarkInferredLinkClean
	}
	return nil
}

func (x *Update) GetMarkInferredLinkDirty() *ResourceLinkRef {
	if x, ok := x.GetUpdateData().(*Update_MarkInferredLinkDirty); ok {
		return x.MarkInferredLinkDirty
	}
	return nil
}

func (x *Update) GetRemoveResourceGroup() *ResourceGroupRef {
	if x, ok := x.GetUpdateData().(*Update_RemoveResourceGroup); ok {
		return x.RemoveResourceGroup
	}
	return nil
}

func (x *Update) GetEditResourceGroup() *ResourceGroupEdit {
	if x, ok := x.GetUpdateData().(*Update_EditResourceGroup); ok {
		return x.EditResourceGroup
	}
	return nil
}

func (x *Update) GetRemoveLink() *ResourceLinkRef {
	if x, ok := x.GetUpdateData().(*Update_RemoveLink); ok {
		return x.RemoveLink
	}
	return nil
}

func (x *Update) GetAddResourceGroup() *ResourceGroup {
	if x, ok := x.GetUpdateData().(*Update_AddResourceGroup); ok {
		return x.AddResourceGroup
	}
	return nil
}

type isUpdate_UpdateData interface {
	isUpdate_UpdateData()
}

type Update_Resource struct {
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3,oneof"`
}

type Update_Link struct {
	Link *ResourceLink `protobuf:"bytes,3,opt,name=link,proto3,oneof"`
}

type Update_Rename struct {
	Rename *ResourceChange `protobuf:"bytes,4,opt,name=rename,proto3,oneof"`
}

type Update_VersionChange struct {
	VersionChange *ResourceGroupVersionChange `protobuf:"bytes,5,opt,name=versionChange,proto3,oneof"`
}

type Update_RenameLink struct {
	RenameLink *ResourceLinkRename `protobuf:"bytes,6,opt,name=renameLink,proto3,oneof"`
}

type Update_MarkLinkClean struct {
	MarkLinkClean *ResourceLink `protobuf:"bytes,7,opt,name=markLinkClean,proto3,oneof"`
}

type Update_MarkLinkDirty struct {
	MarkLinkDirty *ResourceLinkRef `protobuf:"bytes,8,opt,name=markLinkDirty,proto3,oneof"`
}

type Update_MarkInferredLinkClean struct {
	MarkInferredLinkClean *InferredLinkClean `protobuf:"bytes,9,opt,name=markInferredLinkClean,proto3,oneof"`
}

type Update_MarkInferredLinkDirty struct {
	MarkInferredLinkDirty *ResourceLinkRef `protobuf:"bytes,10,opt,name=markInferredLinkDirty,proto3,oneof"`
}

type Update_RemoveResourceGroup struct {
	RemoveResourceGroup *ResourceGroupRef `protobuf:"bytes,11,opt,name=removeResourceGroup,proto3,oneof"`
}

type Update_EditResourceGroup struct {
	EditResourceGroup *ResourceGroupEdit `protobuf:"bytes,12,opt,name=editResourceGroup,proto3,oneof"`
}

type Update_RemoveLink struct {
	RemoveLink *ResourceLinkRef `protobuf:"bytes,13,opt,name=removeLink,proto3,oneof"`
}

type Update_AddResourceGroup struct {
	AddResourceGroup *ResourceGroup `protobuf:"bytes,14,opt,name=addResourceGroup,proto3,oneof"`
}

func (*Update_Resource) isUpdate_UpdateData() {}

func (*Update_Link) isUpdate_UpdateData() {}

func (*Update_Rename) isUpdate_UpdateData() {}

func (*Update_VersionChange) isUpdate_UpdateData() {}

func (*Update_RenameLink) isUpdate_UpdateData() {}

func (*Update_MarkLinkClean) isUpdate_UpdateData() {}

func (*Update_MarkLinkDirty) isUpdate_UpdateData() {}

func (*Update_MarkInferredLinkClean) isUpdate_UpdateData() {}

func (*Update_MarkInferredLinkDirty) isUpdate_UpdateData() {}

func (*Update_RemoveResourceGroup) isUpdate_UpdateData() {}

func (*Update_EditResourceGroup) isUpdate_UpdateData() {}

func (*Update_RemoveLink) isUpdate_UpdateData() {}

func (*Update_AddResourceGroup) isUpdate_UpdateData() {}

type UpdateDepiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string    `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Updates   []*Update `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateDepiRequest) Reset() {
	*x = UpdateDepiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepiRequest) ProtoMessage() {}

func (x *UpdateDepiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepiRequest.ProtoReflect.Descriptor instead.
func (*UpdateDepiRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{73}
}

func (x *UpdateDepiRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateDepiRequest) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

type WatchBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *WatchBlackboardRequest) Reset() {
	*x = WatchBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBlackboardRequest) ProtoMessage() {}

func (x *WatchBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBlackboardRequest.ProtoReflect.Descriptor instead.
func (*WatchBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{74}
}

func (x *WatchBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type UnwatchBlackboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *UnwatchBlackboardRequest) Reset() {
	*x = UnwatchBlackboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnwatchBlackboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwatchBlackboardRequest) ProtoMessage() {}

func (x *UnwatchBlackboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwatchBlackboardRequest.ProtoReflect.Descriptor instead.
func (*UnwatchBlackboardRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{75}
}

func (x *UnwatchBlackboardRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type WatchDepiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *WatchDepiRequest) Reset() {
	*x = WatchDepiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDepiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDepiRequest) ProtoMessage() {}

func (x *WatchDepiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDepiRequest.ProtoReflect.Descriptor instead.
func (*WatchDepiRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{76}
}

func (x *WatchDepiRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type UnwatchDepiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *UnwatchDepiRequest) Reset() {
	*x = UnwatchDepiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnwatchDepiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwatchDepiRequest) ProtoMessage() {}

func (x *UnwatchDepiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwatchDepiRequest.ProtoReflect.Descriptor instead.
func (*UnwatchDepiRequest) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{77}
}

func (x *UnwatchDepiRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type BlackboardUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg     string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Updates []*Update `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *BlackboardUpdate) Reset() {
	*x = BlackboardUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackboardUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackboardUpdate) ProtoMessage() {}

func (x *BlackboardUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackboardUpdate.ProtoReflect.Descriptor instead.
func (*BlackboardUpdate) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{78}
}

func (x *BlackboardUpdate) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *BlackboardUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BlackboardUpdate) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

type DepiUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg     string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Updates []*Update `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *DepiUpdate) Reset() {
	*x = DepiUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepiUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepiUpdate) ProtoMessage() {}

func (x *DepiUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_depi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepiUpdate.ProtoReflect.Descriptor instead.
func (*DepiUpdate) Descriptor() ([]byte, []int) {
	return file_depi_proto_rawDescGZIP(), []int{79}
}

func (x *DepiUpdate) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DepiUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DepiUpdate) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

var File_depi_proto protoreflect.FileDescriptor

var file_depi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x32, 0x0a, 0x14, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22,
	0xbe, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x55, 0x52, 0x4c, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x49, 0x64,
	0x22, 0x90, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x54, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x55, 0x52, 0x4c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x55, 0x52, 0x4c, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52,
	0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x63, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52,
	0x4c, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x4e, 0x65, 0x77,
	0x22, 0x78, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x52,
	0x4c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x52, 0x4c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0x70, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x37, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x0b, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x37,
	0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x0f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x1c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52,
	0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x65, 0x0a, 0x1b,
	0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x52, 0x4c, 0x22, 0x78, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x59, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x6d, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x72, 0x0a, 0x18, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x73, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x66, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xac, 0x01,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x1f,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x24, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x22, 0x3d,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x90, 0x01,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x27, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x22, 0x5d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x66, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x22,
	0x66, 0x0a, 0x11, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x72, 0x74, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x72, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x69, 0x72, 0x74, 0x79, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x11, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x44, 0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x11, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x44, 0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x6f, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x66, 0x0a,
	0x1e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x68, 0x0a, 0x20, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22,
	0x5a, 0x0a, 0x14, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x5c, 0x0a, 0x16, 0x55,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x66, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x6a, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22,
	0x34, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x15, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x35, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x36, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x1a, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x72,
	0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x66, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xd3, 0x01, 0x0a,
	0x21, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x72,
	0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x66,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x0f, 0x64, 0x69, 0x72, 0x74, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x64,
	0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x22, 0x38, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x75,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x50, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x61, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x73, 0x22, 0x62, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x77, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x22, 0x87, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x22, 0xbe, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x3e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x42, 0x69,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x63, 0x0a, 0x11, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbd, 0x06, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x0a,
	0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a,
	0x0a, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x35, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61,
	0x72, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x6d,
	0x61, 0x72, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x6e, 0x6b,
	0x44, 0x69, 0x72, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x12, 0x48, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x13, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x13, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3c, 0x0a, 0x10, 0x61, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x36, 0x0a,
	0x16, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x18, 0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x30, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x12, 0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x10, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x51,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2a, 0x3f, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x10, 0x03, 0x2a, 0xae, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x61, 0x72, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x74, 0x79, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x10, 0x0a, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x0c, 0x12, 0x14, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x10, 0x0d, 0x2a, 0x34, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x73, 0x10, 0x01, 0x32, 0xed, 0x18, 0x0a, 0x04, 0x44, 0x65,
	0x70, 0x69, 0x12, 0x28, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x12, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x14, 0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x11,
	0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x20, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x17, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x19, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x21, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x44, 0x69, 0x72, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41,
	0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x10, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x69, 0x12, 0x12, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x69, 0x12, 0x11, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x44, 0x65, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x11, 0x55, 0x6e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x2e,
	0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b,
	0x55, 0x6e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x69, 0x12, 0x13, 0x2e, 0x55, 0x6e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1b, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x13, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x55, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72,
	0x54, 0x61, 0x67, 0x12, 0x1f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x25, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x64, 0x65, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_depi_proto_rawDescOnce sync.Once
	file_depi_proto_rawDescData = file_depi_proto_rawDesc
)

func file_depi_proto_rawDescGZIP() []byte {
	file_depi_proto_rawDescOnce.Do(func() {
		file_depi_proto_rawDescData = protoimpl.X.CompressGZIP(file_depi_proto_rawDescData)
	})
	return file_depi_proto_rawDescData
}

var file_depi_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_depi_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_depi_proto_goTypes = []interface{}{
	(ChangeType)(0),                              // 0: ChangeType
	(UpdateType)(0),                              // 1: UpdateType
	(DependenciesType)(0),                        // 2: DependenciesType
	(*Resource)(nil),                             // 3: Resource
	(*ResourceChange)(nil),                       // 4: ResourceChange
	(*ResourceGroup)(nil),                        // 5: ResourceGroup
	(*ResourceGroupChange)(nil),                  // 6: ResourceGroupChange
	(*ResourceGroupVersionChange)(nil),           // 7: ResourceGroupVersionChange
	(*ResourceGroupEdit)(nil),                    // 8: ResourceGroupEdit
	(*ResourceGroupRef)(nil),                     // 9: ResourceGroupRef
	(*ResourceRef)(nil),                          // 10: ResourceRef
	(*ResourceLinkRename)(nil),                   // 11: ResourceLinkRename
	(*ResourceRefPattern)(nil),                   // 12: ResourceRefPattern
	(*LoginRequest)(nil),                         // 13: LoginRequest
	(*LoginResponse)(nil),                        // 14: LoginResponse
	(*LoginWithTokenRequest)(nil),                // 15: LoginWithTokenRequest
	(*PingRequest)(nil),                          // 16: PingRequest
	(*PingResponse)(nil),                         // 17: PingResponse
	(*LogoutRequest)(nil),                        // 18: LogoutRequest
	(*GenericResponse)(nil),                      // 19: GenericResponse
	(*RegisterCallbackRequest)(nil),              // 20: RegisterCallbackRequest
	(*ResourceUpdate)(nil),                       // 21: ResourceUpdate
	(*ResourcesUpdatedNotification)(nil),         // 22: ResourcesUpdatedNotification
	(*WatchResourceGroupRequest)(nil),            // 23: WatchResourceGroupRequest
	(*UnwatchResourceGroupRequest)(nil),          // 24: UnwatchResourceGroupRequest
	(*GetLastKnownVersionRequest)(nil),           // 25: GetLastKnownVersionRequest
	(*GetLastKnownVersionResponse)(nil),          // 26: GetLastKnownVersionResponse
	(*UpdateResourceGroupRequest)(nil),           // 27: UpdateResourceGroupRequest
	(*AddResourceGroupRequest)(nil),              // 28: AddResourceGroupRequest
	(*EditResourceGroupRequest)(nil),             // 29: EditResourceGroupRequest
	(*RemoveResourceGroupRequest)(nil),           // 30: RemoveResourceGroupRequest
	(*AddResourceRequest)(nil),                   // 31: AddResourceRequest
	(*AddResourcesToBlackboardRequest)(nil),      // 32: AddResourcesToBlackboardRequest
	(*RemoveResourcesFromBlackboardRequest)(nil), // 33: RemoveResourcesFromBlackboardRequest
	(*GetBlackboardResourcesRequest)(nil),        // 34: GetBlackboardResourcesRequest
	(*GetBlackboardResourcesResponse)(nil),       // 35: GetBlackboardResourcesResponse
	(*ResourceLinkRef)(nil),                      // 36: ResourceLinkRef
	(*InferredDirtiness)(nil),                    // 37: InferredDirtiness
	(*ResourceLink)(nil),                         // 38: ResourceLink
	(*ResourceLinkPattern)(nil),                  // 39: ResourceLinkPattern
	(*LinkBlackboardResourcesRequest)(nil),       // 40: LinkBlackboardResourcesRequest
	(*UnlinkBlackboardResourcesRequest)(nil),     // 41: UnlinkBlackboardResourcesRequest
	(*LinkResourcesRequest)(nil),                 // 42: LinkResourcesRequest
	(*UnlinkResourcesRequest)(nil),               // 43: UnlinkResourcesRequest
	(*GetBidirectionalChangesResponse)(nil),      // 44: GetBidirectionalChangesResponse
	(*SetBranchRequest)(nil),                     // 45: SetBranchRequest
	(*CurrentBranchRequest)(nil),                 // 46: CurrentBranchRequest
	(*CurrentBranchResponse)(nil),                // 47: CurrentBranchResponse
	(*SaveBlackboardRequest)(nil),                // 48: SaveBlackboardRequest
	(*ClearBlackboardRequest)(nil),               // 49: ClearBlackboardRequest
	(*CreateBranchRequest)(nil),                  // 50: CreateBranchRequest
	(*CreateTagRequest)(nil),                     // 51: CreateTagRequest
	(*MarkResourcesCleanRequest)(nil),            // 52: MarkResourcesCleanRequest
	(*MarkLinksCleanRequest)(nil),                // 53: MarkLinksCleanRequest
	(*MarkInferredDirtinessCleanRequest)(nil),    // 54: MarkInferredDirtinessCleanRequest
	(*GetResourceGroupsRequest)(nil),             // 55: GetResourceGroupsRequest
	(*GetResourceGroupsForTagRequest)(nil),       // 56: GetResourceGroupsForTagRequest
	(*GetResourceGroupsResponse)(nil),            // 57: GetResourceGroupsResponse
	(*GetResourcesRequest)(nil),                  // 58: GetResourcesRequest
	(*GetResourcesResponse)(nil),                 // 59: GetResourcesResponse
	(*GetResourcesAsStreamResponse)(nil),         // 60: GetResourcesAsStreamResponse
	(*GetLinksRequest)(nil),                      // 61: GetLinksRequest
	(*GetAllLinksAsStreamRequest)(nil),           // 62: GetAllLinksAsStreamRequest
	(*GetLinksResponse)(nil),                     // 63: GetLinksResponse
	(*GetLinksAsStreamResponse)(nil),             // 64: GetLinksAsStreamResponse
	(*GetDirtyLinksRequest)(nil),                 // 65: GetDirtyLinksRequest
	(*GetDirtyLinksResponse)(nil),                // 66: GetDirtyLinksResponse
	(*GetDirtyLinksAsStreamResponse)(nil),        // 67: GetDirtyLinksAsStreamResponse
	(*GetDependencyGraphRequest)(nil),            // 68: GetDependencyGraphRequest
	(*GetDependencyGraphResponse)(nil),           // 69: GetDependencyGraphResponse
	(*GetBranchListRequest)(nil),                 // 70: GetBranchListRequest
	(*GetBranchListResponse)(nil),                // 71: GetBranchListResponse
	(*GetBidirectionalChangesRequest)(nil),       // 72: GetBidirectionalChangesRequest
	(*ApproveBidirectionalChangeRequest)(nil),    // 73: ApproveBidirectionalChangeRequest
	(*InferredLinkClean)(nil),                    // 74: InferredLinkClean
	(*Update)(nil),                               // 75: Update
	(*UpdateDepiRequest)(nil),                    // 76: UpdateDepiRequest
	(*WatchBlackboardRequest)(nil),               // 77: WatchBlackboardRequest
	(*UnwatchBlackboardRequest)(nil),             // 78: UnwatchBlackboardRequest
	(*WatchDepiRequest)(nil),                     // 79: WatchDepiRequest
	(*UnwatchDepiRequest)(nil),                   // 80: UnwatchDepiRequest
	(*BlackboardUpdate)(nil),                     // 81: BlackboardUpdate
	(*DepiUpdate)(nil),                           // 82: DepiUpdate
}
var file_depi_proto_depIdxs = []int32{
	0,   // 0: ResourceChange.changeType:type_name -> ChangeType
	3,   // 1: ResourceGroup.resources:type_name -> Resource
	4,   // 2: ResourceGroupChange.resources:type_name -> ResourceChange
	3,   // 3: ResourceLinkRename.fromRes:type_name -> Resource
	3,   // 4: ResourceLinkRename.fromResNew:type_name -> Resource
	3,   // 5: ResourceLinkRename.toRes:type_name -> Resource
	3,   // 6: ResourceLinkRename.toResNew:type_name -> Resource
	10,  // 7: ResourceUpdate.watchedResource:type_name -> ResourceRef
	10,  // 8: ResourceUpdate.updatedResource:type_name -> ResourceRef
	21,  // 9: ResourcesUpdatedNotification.updates:type_name -> ResourceUpdate
	6,   // 10: UpdateResourceGroupRequest.resourceGroup:type_name -> ResourceGroupChange
	5,   // 11: AddResourceGroupRequest.resourceGroup:type_name -> ResourceGroup
	8,   // 12: EditResourceGroupRequest.resourceGroup:type_name -> ResourceGroupEdit
	9,   // 13: RemoveResourceGroupRequest.resourceGroup:type_name -> ResourceGroupRef
	3,   // 14: AddResourcesToBlackboardRequest.resources:type_name -> Resource
	10,  // 15: RemoveResourcesFromBlackboardRequest.resourceRefs:type_name -> ResourceRef
	3,   // 16: GetBlackboardResourcesResponse.resources:type_name -> Resource
	38,  // 17: GetBlackboardResourcesResponse.links:type_name -> ResourceLink
	10,  // 18: ResourceLinkRef.fromRes:type_name -> ResourceRef
	10,  // 19: ResourceLinkRef.toRes:type_name -> ResourceRef
	3,   // 20: InferredDirtiness.resource:type_name -> Resource
	3,   // 21: ResourceLink.fromRes:type_name -> Resource
	3,   // 22: ResourceLink.toRes:type_name -> Resource
	37,  // 23: ResourceLink.inferredDirtiness:type_name -> InferredDirtiness
	12,  // 24: ResourceLinkPattern.fromRes:type_name -> ResourceRefPattern
	12,  // 25: ResourceLinkPattern.toRes:type_name -> ResourceRefPattern
	36,  // 26: LinkBlackboardResourcesRequest.links:type_name -> ResourceLinkRef
	36,  // 27: UnlinkBlackboardResourcesRequest.links:type_name -> ResourceLinkRef
	36,  // 28: LinkResourcesRequest.link:type_name -> ResourceLinkRef
	36,  // 29: UnlinkResourcesRequest.link:type_name -> ResourceLinkRef
	3,   // 30: GetBidirectionalChangesResponse.resource:type_name -> Resource
	10,  // 31: MarkResourcesCleanRequest.resourceRefs:type_name -> ResourceRef
	36,  // 32: MarkLinksCleanRequest.links:type_name -> ResourceLinkRef
	36,  // 33: MarkInferredDirtinessCleanRequest.link:type_name -> ResourceLinkRef
	10,  // 34: MarkInferredDirtinessCleanRequest.dirtinessSource:type_name -> ResourceRef
	5,   // 35: GetResourceGroupsResponse.resourceGroups:type_name -> ResourceGroup
	12,  // 36: GetResourcesRequest.patterns:type_name -> ResourceRefPattern
	3,   // 37: GetResourcesResponse.resources:type_name -> Resource
	3,   // 38: GetResourcesAsStreamResponse.resource:type_name -> Resource
	39,  // 39: GetLinksRequest.patterns:type_name -> ResourceLinkPattern
	38,  // 40: GetLinksResponse.resourceLinks:type_name -> ResourceLink
	38,  // 41: GetLinksAsStreamResponse.resourceLink:type_name -> ResourceLink
	3,   // 42: GetDirtyLinksResponse.resources:type_name -> Resource
	38,  // 43: GetDirtyLinksResponse.links:type_name -> ResourceLink
	3,   // 44: GetDirtyLinksAsStreamResponse.resource:type_name -> Resource
	38,  // 45: GetDirtyLinksAsStreamResponse.link:type_name -> ResourceLink
	10,  // 46: GetDependencyGraphRequest.resource:type_name -> ResourceRef
	2,   // 47: GetDependencyGraphRequest.dependenciesType:type_name -> DependenciesType
	3,   // 48: GetDependencyGraphResponse.resource:type_name -> Resource
	38,  // 49: GetDependencyGraphResponse.links:type_name -> ResourceLink
	10,  // 50: ApproveBidirectionalChangeRequest.resources:type_name -> ResourceRef
	36,  // 51: InferredLinkClean.link:type_name -> ResourceLinkRef
	10,  // 52: InferredLinkClean.resource:type_name -> ResourceRef
	1,   // 53: Update.updateType:type_name -> UpdateType
	3,   // 54: Update.resource:type_name -> Resource
	38,  // 55: Update.link:type_name -> ResourceLink
	4,   // 56: Update.rename:type_name -> ResourceChange
	7,   // 57: Update.versionChange:type_name -> ResourceGroupVersionChange
	11,  // 58: Update.renameLink:type_name -> ResourceLinkRename
	38,  // 59: Update.markLinkClean:type_name -> ResourceLink
	36,  // 60: Update.markLinkDirty:type_name -> ResourceLinkRef
	74,  // 61: Update.markInferredLinkClean:type_name -> InferredLinkClean
	36,  // 62: Update.markInferredLinkDirty:type_name -> ResourceLinkRef
	9,   // 63: Update.removeResourceGroup:type_name -> ResourceGroupRef
	8,   // 64: Update.editResourceGroup:type_name -> ResourceGroupEdit
	36,  // 65: Update.removeLink:type_name -> ResourceLinkRef
	5,   // 66: Update.addResourceGroup:type_name -> ResourceGroup
	75,  // 67: UpdateDepiRequest.updates:type_name -> Update
	75,  // 68: BlackboardUpdate.updates:type_name -> Update
	75,  // 69: DepiUpdate.updates:type_name -> Update
	13,  // 70: Depi.Login:input_type -> LoginRequest
	15,  // 71: Depi.LoginWithToken:input_type -> LoginWithTokenRequest
	18,  // 72: Depi.Logout:input_type -> LogoutRequest
	20,  // 73: Depi.RegisterCallback:input_type -> RegisterCallbackRequest
	23,  // 74: Depi.WatchResourceGroup:input_type -> WatchResourceGroupRequest
	24,  // 75: Depi.UnwatchResourceGroup:input_type -> UnwatchResourceGroupRequest
	50,  // 76: Depi.CreateBranch:input_type -> CreateBranchRequest
	45,  // 77: Depi.SetBranch:input_type -> SetBranchRequest
	51,  // 78: Depi.CreateTag:input_type -> CreateTagRequest
	25,  // 79: Depi.GetLastKnownVersion:input_type -> GetLastKnownVersionRequest
	27,  // 80: Depi.UpdateResourceGroup:input_type -> UpdateResourceGroupRequest
	32,  // 81: Depi.AddResourcesToBlackboard:input_type -> AddResourcesToBlackboardRequest
	33,  // 82: Depi.RemoveResourcesFromBlackboard:input_type -> RemoveResourcesFromBlackboardRequest
	40,  // 83: Depi.LinkBlackboardResources:input_type -> LinkBlackboardResourcesRequest
	41,  // 84: Depi.UnlinkBlackboardResources:input_type -> UnlinkBlackboardResourcesRequest
	34,  // 85: Depi.GetBlackboardResources:input_type -> GetBlackboardResourcesRequest
	48,  // 86: Depi.SaveBlackboard:input_type -> SaveBlackboardRequest
	49,  // 87: Depi.ClearBlackboard:input_type -> ClearBlackboardRequest
	65,  // 88: Depi.GetDirtyLinks:input_type -> GetDirtyLinksRequest
	65,  // 89: Depi.GetDirtyLinksAsStream:input_type -> GetDirtyLinksRequest
	53,  // 90: Depi.MarkLinksClean:input_type -> MarkLinksCleanRequest
	54,  // 91: Depi.MarkInferredDirtinessClean:input_type -> MarkInferredDirtinessCleanRequest
	72,  // 92: Depi.GetBidirectionalChanges:input_type -> GetBidirectionalChangesRequest
	73,  // 93: Depi.ApproveBidirectionalChange:input_type -> ApproveBidirectionalChangeRequest
	55,  // 94: Depi.GetResourceGroups:input_type -> GetResourceGroupsRequest
	58,  // 95: Depi.GetResources:input_type -> GetResourcesRequest
	58,  // 96: Depi.GetResourcesAsStream:input_type -> GetResourcesRequest
	61,  // 97: Depi.GetLinks:input_type -> GetLinksRequest
	62,  // 98: Depi.GetAllLinksAsStream:input_type -> GetAllLinksAsStreamRequest
	61,  // 99: Depi.GetLinksAsStream:input_type -> GetLinksRequest
	68,  // 100: Depi.GetDependencyGraph:input_type -> GetDependencyGraphRequest
	70,  // 101: Depi.GetBranchList:input_type -> GetBranchListRequest
	76,  // 102: Depi.UpdateDepi:input_type -> UpdateDepiRequest
	77,  // 103: Depi.WatchBlackboard:input_type -> WatchBlackboardRequest
	79,  // 104: Depi.WatchDepi:input_type -> WatchDepiRequest
	78,  // 105: Depi.UnwatchBlackboard:input_type -> UnwatchBlackboardRequest
	80,  // 106: Depi.UnwatchDepi:input_type -> UnwatchDepiRequest
	28,  // 107: Depi.AddResourceGroup:input_type -> AddResourceGroupRequest
	29,  // 108: Depi.EditResourceGroup:input_type -> EditResourceGroupRequest
	30,  // 109: Depi.RemoveResourceGroup:input_type -> RemoveResourceGroupRequest
	31,  // 110: Depi.AddResource:input_type -> AddResourceRequest
	42,  // 111: Depi.LinkResources:input_type -> LinkResourcesRequest
	43,  // 112: Depi.UnlinkResources:input_type -> UnlinkResourcesRequest
	46,  // 113: Depi.CurrentBranch:input_type -> CurrentBranchRequest
	56,  // 114: Depi.GetResourceGroupsForTag:input_type -> GetResourceGroupsForTagRequest
	16,  // 115: Depi.Ping:input_type -> PingRequest
	14,  // 116: Depi.Login:output_type -> LoginResponse
	14,  // 117: Depi.LoginWithToken:output_type -> LoginResponse
	19,  // 118: Depi.Logout:output_type -> GenericResponse
	22,  // 119: Depi.RegisterCallback:output_type -> ResourcesUpdatedNotification
	19,  // 120: Depi.WatchResourceGroup:output_type -> GenericResponse
	19,  // 121: Depi.UnwatchResourceGroup:output_type -> GenericResponse
	19,  // 122: Depi.CreateBranch:output_type -> GenericResponse
	19,  // 123: Depi.SetBranch:output_type -> GenericResponse
	19,  // 124: Depi.CreateTag:output_type -> GenericResponse
	26,  // 125: Depi.GetLastKnownVersion:output_type -> GetLastKnownVersionResponse
	19,  // 126: Depi.UpdateResourceGroup:output_type -> GenericResponse
	19,  // 127: Depi.AddResourcesToBlackboard:output_type -> GenericResponse
	19,  // 128: Depi.RemoveResourcesFromBlackboard:output_type -> GenericResponse
	19,  // 129: Depi.LinkBlackboardResources:output_type -> GenericResponse
	19,  // 130: Depi.UnlinkBlackboardResources:output_type -> GenericResponse
	35,  // 131: Depi.GetBlackboardResources:output_type -> GetBlackboardResourcesResponse
	19,  // 132: Depi.SaveBlackboard:output_type -> GenericResponse
	19,  // 133: Depi.ClearBlackboard:output_type -> GenericResponse
	66,  // 134: Depi.GetDirtyLinks:output_type -> GetDirtyLinksResponse
	67,  // 135: Depi.GetDirtyLinksAsStream:output_type -> GetDirtyLinksAsStreamResponse
	19,  // 136: Depi.MarkLinksClean:output_type -> GenericResponse
	19,  // 137: Depi.MarkInferredDirtinessClean:output_type -> GenericResponse
	44,  // 138: Depi.GetBidirectionalChanges:output_type -> GetBidirectionalChangesResponse
	19,  // 139: Depi.ApproveBidirectionalChange:output_type -> GenericResponse
	57,  // 140: Depi.GetResourceGroups:output_type -> GetResourceGroupsResponse
	59,  // 141: Depi.GetResources:output_type -> GetResourcesResponse
	60,  // 142: Depi.GetResourcesAsStream:output_type -> GetResourcesAsStreamResponse
	63,  // 143: Depi.GetLinks:output_type -> GetLinksResponse
	64,  // 144: Depi.GetAllLinksAsStream:output_type -> GetLinksAsStreamResponse
	64,  // 145: Depi.GetLinksAsStream:output_type -> GetLinksAsStreamResponse
	69,  // 146: Depi.GetDependencyGraph:output_type -> GetDependencyGraphResponse
	71,  // 147: Depi.GetBranchList:output_type -> GetBranchListResponse
	19,  // 148: Depi.UpdateDepi:output_type -> GenericResponse
	81,  // 149: Depi.WatchBlackboard:output_type -> BlackboardUpdate
	82,  // 150: Depi.WatchDepi:output_type -> DepiUpdate
	19,  // 151: Depi.UnwatchBlackboard:output_type -> GenericResponse
	19,  // 152: Depi.UnwatchDepi:output_type -> GenericResponse
	19,  // 153: Depi.AddResourceGroup:output_type -> GenericResponse
	19,  // 154: Depi.EditResourceGroup:output_type -> GenericResponse
	19,  // 155: Depi.RemoveResourceGroup:output_type -> GenericResponse
	19,  // 156: Depi.AddResource:output_type -> GenericResponse
	19,  // 157: Depi.LinkResources:output_type -> GenericResponse
	19,  // 158: Depi.UnlinkResources:output_type -> GenericResponse
	47,  // 159: Depi.CurrentBranch:output_type -> CurrentBranchResponse
	57,  // 160: Depi.GetResourceGroupsForTag:output_type -> GetResourceGroupsResponse
	17,  // 161: Depi.Ping:output_type -> PingResponse
	116, // [116:162] is the sub-list for method output_type
	70,  // [70:116] is the sub-list for method input_type
	70,  // [70:70] is the sub-list for extension type_name
	70,  // [70:70] is the sub-list for extension extendee
	0,   // [0:70] is the sub-list for field type_name
}

func init() { file_depi_proto_init() }
func file_depi_proto_init() {
	if File_depi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_depi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroupChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroupVersionChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroupEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroupRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLinkRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRefPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesUpdatedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnwatchResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastKnownVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastKnownVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourcesToBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourcesFromBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackboardResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackboardResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLinkRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferredDirtiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLinkPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkBlackboardResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkBlackboardResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBidirectionalChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkResourcesCleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkLinksCleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkInferredDirtinessCleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceGroupsForTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesAsStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllLinksAsStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinksAsStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirtyLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirtyLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDirtyLinksAsStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDependencyGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDependencyGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBidirectionalChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveBidirectionalChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferredLinkClean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnwatchBlackboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDepiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnwatchDepiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackboardUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepiUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_depi_proto_msgTypes[47].OneofWrappers = []interface{}{
		(*CreateBranchRequest_FromBranch)(nil),
		(*CreateBranchRequest_FromTag)(nil),
	}
	file_depi_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*Update_Resource)(nil),
		(*Update_Link)(nil),
		(*Update_Rename)(nil),
		(*Update_VersionChange)(nil),
		(*Update_RenameLink)(nil),
		(*Update_MarkLinkClean)(nil),
		(*Update_MarkLinkDirty)(nil),
		(*Update_MarkInferredLinkClean)(nil),
		(*Update_MarkInferredLinkDirty)(nil),
		(*Update_RemoveResourceGroup)(nil),
		(*Update_EditResourceGroup)(nil),
		(*Update_RemoveLink)(nil),
		(*Update_AddResourceGroup)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_depi_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_depi_proto_goTypes,
		DependencyIndexes: file_depi_proto_depIdxs,
		EnumInfos:         file_depi_proto_enumTypes,
		MessageInfos:      file_depi_proto_msgTypes,
	}.Build()
	File_depi_proto = out.File
	file_depi_proto_rawDesc = nil
	file_depi_proto_goTypes = nil
	file_depi_proto_depIdxs = nil
}
